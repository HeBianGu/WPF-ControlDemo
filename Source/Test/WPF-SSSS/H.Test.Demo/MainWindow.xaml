<Window
    x:Class="H.Test.Demo.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:generic="clr-namespace:System.Collections.Generic;assembly=System.Collections"
    xmlns:h="https://github.com/HeBianGu"
    xmlns:local="clr-namespace:H.Test.Demo"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
    x:Name="w"
    Title="MainWindow"
    Width="1200"
    Height="750"
    d:DataContext="{d:DesignInstance Type={x:Type local:MainViewModel}}"
    FontSize="20"
    mc:Ignorable="d">
    <Window.DataContext>
        <local:MainViewModel />
    </Window.DataContext>
    <Window.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
    </Window.Resources>
    <TabControl Style="{DynamicResource {x:Static h:TabControlKeys.Default}}" TabStripPlacement="Left">
        <TabControl.ContentTemplate>
            <DataTemplate>
                <GroupBox Header="输出结果" Style="{DynamicResource {x:Static h:GroupBoxKeys.Default}}">
                    <ContentPresenter Content="{Binding}" />
                </GroupBox>
            </DataTemplate>
        </TabControl.ContentTemplate>
        <TabItem>
            <TextBlock>
                  <Bold>TextBlock</Bold> is designed to be <Italic>lightweight</Italic>,
  and is geared specifically at integrating <Italic>small</Italic> portions
  of flow content into a UI.
            </TextBlock>
        </TabItem>

        <TabItem Header="ColorConvertedBitmap">
            <!--<TabItem.Resources>
                -->
            <!-- 定义 ColorContext 资源 -->
            <!--
                <ColorContext x:Key="sRgbColorContext" Source="{x:Static ColorContext.SRgb}" />
                <ColorContext x:Key="scRgbColorContext" Source="{x:Static ColorContext.ScRgb}" />
            </TabItem.Resources>-->
            <Image Width="200" Height="200" Source="{Binding ColorConvertedImageSource}">
                <!--<Image.Source>
                    <ColorConvertedBitmap DestinationFormat="{x:Static PixelFormats.Gray8}">
                        <ColorConvertedBitmap.Source>
                            <BitmapImage UriSource="2.jpg" />
                        </ColorConvertedBitmap.Source>
                    </ColorConvertedBitmap>
                </Image.Source>-->
            </Image>
            <!--<Image Width="200" Height="200">
                <Image.Source>
                    <ColorConvertedBitmap DestinationColorContext="{Binding Source={x:Static ColorContext.ScRgb}}">
                        <ColorConvertedBitmap.Source>
                            <BitmapImage UriSource="2.jpg" />
                        </ColorConvertedBitmap.Source>
                        <ColorConvertedBitmap.SourceColorContext>
                            <ColorContext>PixelFormats.Gray8</ColorContext>
                        </ColorConvertedBitmap.SourceColorContext>
                    </ColorConvertedBitmap>
                </Image.Source>
            </Image>-->
        </TabItem>

        <TabItem Header="测试异步绘制DrawingVisual">
            <local:MyGrid/>
        </TabItem>

        <TabItem Header="SaveToImage">
            <Grid>
                <Image Source="{Binding ElementName=w, Path=DataContext.ImageSource}" />
            </Grid>
        </TabItem>

        <TabItem Header="Grid显示网格线的几种方式">
            <TabControl TabStripPlacement="Bottom">
                <TabItem Header="使用OnRender绘制">
                    <local:LineGrid Margin="50">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="50" />
                            <RowDefinition Height="50" />
                            <RowDefinition Height="50" />
                            <RowDefinition Height="50" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="100" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="5"
                            Margin="1"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="White"
                            Text="LineGrid" />

                        <Label
                            Margin="1"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            Background="White"
                            Content="Center"
                            FontSize="50" />
                    </local:LineGrid>
                </TabItem>
                <TabItem Header="ShowGridLines">
                    <Grid Margin="50" ShowGridLines="True">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="50" />
                            <RowDefinition Height="50" />
                            <RowDefinition Height="50" />
                            <RowDefinition Height="50" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="100" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="5"
                            Margin="1"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="White"
                            Text="LineGrid" />

                        <Label
                            Margin="1"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            Background="White"
                            Content="Center"
                            FontSize="50" />
                    </Grid>
                </TabItem>
                <TabItem Header="使用Adoner绘制">
                    <AdornerDecorator>
                        <Grid Margin="50" Loaded="GridLine_Loaded">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="50" />
                                <RowDefinition Height="50" />
                                <RowDefinition Height="50" />
                                <RowDefinition Height="50" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="100" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="5"
                                Margin="1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="White"
                                Text="LineGrid" />

                            <Label
                                Margin="1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                Background="White"
                                Content="Center"
                                FontSize="50" />
                        </Grid>


                    </AdornerDecorator>
                </TabItem>

                <TabItem Header="GridLineAttach添加Border">
                    <Grid Margin="50" local:GridLineAttach.Use="True">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="50" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="100" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="5"
                            Margin="1"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="White"
                            Text="LineGrid" />

                        <Label
                            Margin="1"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            Background="White"
                            Content="Center"
                            FontSize="50" />
                        <TextBlock Grid.Row="1" Text="1" />
                    </Grid>
                </TabItem>
            </TabControl>
        </TabItem>

        <TabItem Header="注册控件级全局事件">
            <ItemsControl x:Name="ic_event" Mouse.GotMouseCapture="ic_event_GotMouseCapture" ButtonBase.Click="ItemsControl_Button_Click" ItemsSource="{h:GetStudents}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Content="{Binding Name}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </TabItem>
        <TabItem Header="OverridesDefaultStyle">
            <UniformGrid>
                <GroupBox Header="OverridesDefaultStyle-True">
                    <Button Content="Button">
                        <Button.Style>
                            <Style TargetType="Button">
                                <!--  Set to true to not get any properties from the themes.  -->
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid>
                                                <Ellipse Fill="{TemplateBinding Background}" />
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </GroupBox>
                <GroupBox Header="OverridesDefaultStyle-False">
                    <Button Content="Button">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid>
                                                <Ellipse Fill="{TemplateBinding Background}" />
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </GroupBox>
            </UniformGrid>
        </TabItem>

        <TabItem Header="BorderGapMaskConverter">
            <TabItem.Resources>
                <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />
            </TabItem.Resources>
            <GroupBox Header="带间隙的边框">
                <Border BorderBrush="Black" BorderThickness="2">
                    <Border.OpacityMask>
                        <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="6">
                            <Binding ElementName="tb" Path="ActualWidth" />
                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="BorderThickness" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}" />
                            <!--  间隙宽度  -->
                        </MultiBinding>
                    </Border.OpacityMask>
                    <TextBlock
                        x:Name="tb"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="带间隙的边框" />
                </Border>
            </GroupBox>
        </TabItem>

        <TabItem Header="AlternationConverter">
            <GroupBox Header="AlternationConverter-BackgroundConverter">
                <GroupBox.Resources>
                    <AlternationConverter x:Key="BackgroundConverter">
                        <SolidColorBrush>Blue</SolidColorBrush>
                        <SolidColorBrush>LightBlue</SolidColorBrush>
                        <SolidColorBrush>Orange</SolidColorBrush>
                        <SolidColorBrush>Red</SolidColorBrush>
                        <SolidColorBrush>Green</SolidColorBrush>
                        <SolidColorBrush>Pink</SolidColorBrush>
                        <SolidColorBrush>Purple</SolidColorBrush>
                    </AlternationConverter>
                    <DataTemplate DataType="{x:Type h:Student}">
                        <Border Background="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}, Path=(ItemsControl.AlternationIndex), Converter={StaticResource BackgroundConverter}}">
                            <TextBlock Margin="10,6" Text="{Binding Name}" />
                        </Border>
                    </DataTemplate>
                </GroupBox.Resources>
                <ItemsControl AlternationCount="10000" ItemsSource="{h:GetStudents}" />
            </GroupBox>
        </TabItem>

        <TabItem Header="ButtonBase-ClickMode">
            <UniformGrid>
                <GroupBox Header="Hover">
                    <Button ClickMode="Hover" Content="Hover" />
                </GroupBox>
                <GroupBox Header="Press">
                    <Button ClickMode="Press" Content="Press" />
                </GroupBox>
                <GroupBox Header="Release">
                    <Button ClickMode="Release" Content="Release" />
                </GroupBox>
                <GroupBox Header="ToggleButton-Hover">
                    <Grid>
                        <ToggleButton
                            x:Name="tb_hover"
                            ClickMode="Hover"
                            Content="ToggleButton-Hover" />
                        <Popup IsOpen="{Binding ElementName=tb_hover, Path=IsChecked}" StaysOpen="False">
                            <Border
                                Width="500"
                                Height="500"
                                Background="Red" />
                        </Popup>
                    </Grid>
                </GroupBox>
            </UniformGrid>
        </TabItem>

        <TabItem Header="TextBox-CharacterCasing">
            <UniformGrid>
                <GroupBox Header="输入大写显示">
                    <TextBox CharacterCasing="Upper" />
                </GroupBox>
                <GroupBox Header="输入小写显示">
                    <TextBox CharacterCasing="Lower" />
                </GroupBox>
                <GroupBox Header="输入正常显示">
                    <TextBox CharacterCasing="Normal" />
                </GroupBox>
            </UniformGrid>
        </TabItem>

        <TabItem Header="TabControl持久保存页面">
            <TabControl ItemsSource="{h:GetStudents Count=10}">
                <TabControl.Resources>
                    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                    <DataTemplate DataType="{x:Type h:Student}">
                        <Grid Loaded="Grid_Loaded">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100" />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBox HorizontalAlignment="Stretch" />
                            <GridSplitter
                                Grid.Column="1"
                                Width="5"
                                ResizeBehavior="PreviousAndNext" />
                            <h:Form Grid.Column="2" SelectObject="{Binding}" />
                        </Grid>
                    </DataTemplate>
                </TabControl.Resources>
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.ContentTemplate>
                    <DataTemplate>
                        <ListBox ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=ItemsSource}" SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=SelectedItem}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Grid />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <ContentPresenter />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>
        </TabItem>

        <!--<TabItem Header="MyGenericTypes">
            <TabItem.Resources>
                <x:Array Type="{x:Type System:Type}"  x:Key="ListWithTwoStringTypes">
                    <x:Type TypeName="s:String" />
                    <x:Type TypeName="s:String" />
                </x:Array>
                <local:GenericType BaseType="{x:Type TypeName=Generic:Dictionary`2}"
                       InnerTypes="{StaticResource ListWithTwoStringTypes}"
                       x:Key="DictionaryStringString" />
                <DataTemplate DataType="{StaticResource DictionaryStringString}">
                    <TextBlock Text="Hi Dictionary" FontSize="40" Foreground="Cyan"/>
                </DataTemplate>
            </TabItem.Resources>
            <ListBox ItemsSource="{Binding MyGenericTypes}"/>
        </TabItem>-->

        <!--<TabItem Header="MyGenericTypes">
            <TabItem.Resources>
                <DataTemplate DataType="MyGenericClass&lt;string&gt;">
                    <TextBlock Text="我是Int32"/>
                </DataTemplate>
        -->
        <!--<DataTemplate DataType="{x:Type local:MyGenericClass&lt;s:Int32&gt;}">
                    <TextBlock Text="1111"/>
                </DataTemplate>-->
        <!--
                <local:MyDataTemplate>
                    <TextBlock Text="我是String"/>
                </local:MyDataTemplate>
            </TabItem.Resources>
            <ListBox ItemsSource="{Binding MyGenericTypes}"/>
        </TabItem>-->

        <TabItem Header="TaskCompletionSource-WaitHandle">
            <ListBox ItemsSource="{Binding TaskCompletionSourceTests}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border>
                            <StackPanel>
                                <Button Command="{Binding RunAsyncCommand}" Content="RunAsyncCommand" />
                                <Button Command="{Binding CancelCommand}" Content="CancelCommand" />
                                <Button Command="{Binding SumitCommand}" Content="SumitCommand" />
                                <!--<Button Command="{Binding ExceptionCommand}" Content="ExceptionCommand" />-->
                                <TextBlock Text="{Binding Message}" />
                            </StackPanel>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </TabItem>

        <TabItem Header="TreeLayoutBox">
            <h:TreeLayoutBox ItemsSource="{h:ClassTypeTreeDataProvider IsRecursion=True, Type={x:Type FrameworkElement}}" />
        </TabItem>
        <TabItem Header="TreeView">
            <TreeView Grid.IsSharedSizeScope="True" ItemsSource="{h:ClassTypeTreeDataProvider IsRecursion=True, Type={x:Type FrameworkElement}}">
                <TreeView.Resources>
                    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid
                                        Width="15"
                                        Height="13"
                                        Background="Transparent">
                                        <Path
                                            x:Name="Collapsed"
                                            Margin="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Data="M512 64.6C264.9 64.6 64.6 264.9 64.6 512c0 247.1 200.3 447.4 447.4 447.4S959.4 759.1 959.4 512c0-247.1-200.3-447.4-447.4-447.4z m233.9 524.8H589.4v156.5c0 43.2-35 78.3-78.3 78.3s-78.3-35-78.3-78.3V589.4H276.4c-43.2 0-78.3-35-78.3-78.3 0-43.2 35-78.2 78.3-78.2h156.5V276.4c0-43.2 35-78.3 78.3-78.3s78.3 35 78.3 78.3v156.5H746c43.2 0 78.3 35 78.3 78.2-0.1 43.2-35.2 78.3-78.4 78.3z"
                                            Stretch="Uniform">
                                            <Path.Fill>
                                                <SolidColorBrush Color="{x:Static SystemColors.ActiveBorderColor}" />
                                            </Path.Fill>
                                        </Path>
                                        <Path
                                            x:Name="Expanded"
                                            Margin="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Data="M512 64.6C264.9 64.6 64.6 264.9 64.6 512c0 247.1 200.3 447.4 447.4 447.4S959.4 759.1 959.4 512c0-247.1-200.3-447.4-447.4-447.4z m312.2 446.2c0 43.3-35.1 78.3-78.3 78.3H276.5c-43.3 0-78.3-35.1-78.3-78.3 0-43.3 35.1-78.3 78.3-78.3h469.3c43.3-0.1 78.4 35 78.4 78.3z"
                                            Stretch="Uniform"
                                            Visibility="Hidden">
                                            <Path.Fill>
                                                <SolidColorBrush Color="{x:Static SystemColors.ActiveBorderColor}" />
                                            </Path.Fill>
                                        </Path>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CheckStates">
                                                <VisualState x:Name="Checked">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Expanded" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unchecked" />
                                                <VisualState x:Name="Indeterminate" />
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="TreeViewItem">
                        <Setter Property="VerticalAlignment" Value="Top" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" MinWidth="19" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="{Binding RelativeSource={RelativeSource AncestorType=TreeView}}" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <Border
                                            Grid.Column="0"
                                            Width="10"
                                            BorderBrush="{x:Static SystemColors.ActiveBorderBrush}"
                                            BorderThickness="0.5,0.5,0,0.5" />
                                        <DockPanel Grid.Column="1" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                            <ToggleButton
                                                x:Name="Expander"
                                                Grid.Column="2"
                                                Margin="5,0"
                                                ClickMode="Press"
                                                DockPanel.Dock="Right"
                                                IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                Style="{StaticResource ExpandCollapseToggleStyle}" />
                                            <Border
                                                x:Name="Bd"
                                                Grid.Column="1"
                                                Grid.ColumnSpan="1"
                                                Padding="{TemplateBinding Padding}"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}">
                                                <ContentPresenter
                                                    x:Name="PART_Header"
                                                    Grid.Column="1"
                                                    Margin="10,0"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    ContentSource="Header" />
                                            </Border>

                                        </DockPanel>
                                        <ItemsPresenter
                                            x:Name="ItemsHost"
                                            Grid.Row="0"
                                            Grid.Column="2"
                                            Grid.ColumnSpan="2"
                                            Visibility="Collapsed" />
                                        <!--<Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>-->
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="SelectionStates">
                                                <VisualState x:Name="Selected">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Panel.Background).                     (SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="Red" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unselected" />
                                                <VisualState x:Name="SelectedInactive">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Panel.Background).                     (SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="Red" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="ExpansionStates">
                                                <VisualState x:Name="Expanded">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Collapsed" />
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="HasHeader" Value="false" />
                                                <Condition Property="Width" Value="Auto" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="HasHeader" Value="false" />
                                                <Condition Property="Height" Value="Auto" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TreeView.Resources>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Nodes}">
                        <TextBlock VerticalAlignment="Center" Text="{Binding Model.Name}" />
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </TabItem>
        <TabItem Header="Menu- Binding">
            <Menu ItemsSource="{h:ClassTypeTreeDataProvider IsRecursion=True, Type={x:Type FrameworkElement}}">
                <Menu.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="Command" Value="{h:ShowViewCommand}" />
                        <Setter Property="CommandParameter" Value="{Binding Model}" />
                    </Style>
                </Menu.ItemContainerStyle>
                <Menu.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Nodes}">
                        <TextBlock VerticalAlignment="Center" Text="{Binding Model.Name}" />
                    </HierarchicalDataTemplate>
                </Menu.ItemTemplate>
            </Menu>
        </TabItem>
        <TabItem Header="ContextMenu - Binding">
            <TextBlock Text="右键弹出菜单">
                <TextBlock.ContextMenu>
                    <ContextMenu ItemsSource="{h:ClassTypeTreeDataProvider IsRecursion=True, Type={x:Type FrameworkElement}}">
                        <ContextMenu.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Command" Value="{h:ShowViewCommand}" />
                                <Setter Property="CommandParameter" Value="{Binding Model}" />
                            </Style>
                        </ContextMenu.ItemContainerStyle>
                        <ContextMenu.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Nodes}">
                                <DockPanel>
                                    <CheckBox VerticalAlignment="Center" IsChecked="{Binding IsChecked, Mode=TwoWay}" />
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Model.Name}" />
                                </DockPanel>
                            </HierarchicalDataTemplate>
                        </ContextMenu.ItemTemplate>
                    </ContextMenu>
                </TextBlock.ContextMenu>
            </TextBlock>
        </TabItem>

        <TabItem Header="DependencyPropertyDescriptor">
            <DockPanel>
                <ComboBox x:Name="cbb_dpd" DockPanel.Dock="Top">
                    <SolidColorBrush Color="Yellow" />
                    <SolidColorBrush Color="Orange" />
                    <SolidColorBrush Color="Purple" />
                    <SolidColorBrush Color="Green" />
                </ComboBox>
                <TextBlock
                    x:Name="g_dpd"
                    VerticalAlignment="Stretch"
                    Background="{Binding ElementName=cbb_dpd, Path=SelectedItem}"
                    FontSize="100"
                    TextAlignment="Center" />
            </DockPanel>
        </TabItem>

        <TabItem Header="IsAsync">
            <Button
                x:Name="btn_async"
                Click="btn_async_Click"
                Content="使用IsAsync" />
        </TabItem>

        <TabItem Header="PropertyGrid">
            <DockPanel>
                <h:PropertyGrid
                    Width="350"
                    DockPanel.Dock="Right"
                    SelectedObject="{Binding ElementName=btn}" />
                <Button x:Name="btn" Content="我是按钮" />
            </DockPanel>
        </TabItem>
        <TabItem Header="AdornerDialog">
            <Button Click="Button_AdornerDialog_Click" Content="AdornerDialog加载" />
        </TabItem>

        <TabItem Header="BeiginInvoke">
            <Button Click="Button_Click" Content="BeginInvoke加载" />
        </TabItem>

        <TabItem Header="Grid监测双击">
            <Grid Background="Transparent" MouseDown="Grid_MouseDown">
                <TextBlock x:Name="tb_doubleclick" VerticalAlignment="Top" />
            </Grid>
        </TabItem>

        <TabItem Header="GetEnumSource">
            <ComboBox VerticalAlignment="Center" ItemsSource="{h:GetEnumSource EnumType={x:Type HorizontalAlignment}}" />
        </TabItem>

        <TabItem Header="DisplayEnumConverter">
            <ComboBox VerticalAlignment="Center" ItemsSource="{h:GetEnumSource EnumType={x:Type local:MyEnum}}" />
        </TabItem>

        <TabItem Header="TreeView - Binding">
            <TreeView ItemsSource="{local:GetTestTreeNodes}">
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Nodes}">
                        <TextBlock VerticalAlignment="Center" Text="{Binding Model.Name}" />
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </TabItem>

        <TabItem Header="TreeView - 级联勾选">
            <TreeView ItemsSource="{h:ClassTypeTreeDataProvider IsRecursion=True, Type={x:Type FrameworkElement}}">
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Nodes}">
                        <DockPanel>
                            <CheckBox VerticalAlignment="Center" IsChecked="{Binding IsChecked, Mode=TwoWay}" />
                            <TextBlock
                                x:Name="a"
                                VerticalAlignment="Center"
                                Text="{Binding Model.Name}" />
                        </DockPanel>

                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
                <TreeView.ItemContainerStyle>
                    <Style BasedOn="{StaticResource {x:Static h:TreeViewItemKeys.Default}}" TargetType="TreeViewItem" />
                </TreeView.ItemContainerStyle>
            </TreeView>
        </TabItem>

        <TabItem Header="DataGridAutoColumnBehavior">
            <UniformGrid Columns="2">
                <Grid>
                    <Image>
                        <Image.Source>
                            <BitmapImage UriSource="2.jpg" />
                        </Image.Source>
                    </Image>
                    <TextBlock
                        HorizontalAlignment="Center"
                        FontSize="50"
                        Foreground="DeepPink"
                        Text="原图" />
                </Grid>
                <Grid>
                    <Image>
                        <Image.Source>
                            <BitmapImage DecodePixelHeight="200" UriSource="2.jpg" />
                        </Image.Source>
                    </Image>
                    <TextBlock
                        HorizontalAlignment="Center"
                        FontSize="50"
                        Foreground="DeepPink"
                        Text="DecodePixelHeight200" />
                </Grid>
                <Grid>
                    <Image>
                        <Image.Source>
                            <BitmapImage DecodePixelHeight="150" UriSource="2.jpg" />
                        </Image.Source>
                    </Image>
                    <TextBlock
                        HorizontalAlignment="Center"
                        FontSize="50"
                        Foreground="DeepPink"
                        Text="DecodePixelHeight150" />
                </Grid>
                <Grid>
                    <Image>
                        <Image.Source>
                            <BitmapImage DecodePixelHeight="100" UriSource="2.jpg" />
                        </Image.Source>
                    </Image>
                    <TextBlock
                        HorizontalAlignment="Center"
                        FontSize="50"
                        Foreground="DeepPink"
                        Text="DecodePixelHeight100" />
                </Grid>
                <Grid>
                    <Image>
                        <Image.Source>
                            <BitmapImage DecodePixelHeight="50" UriSource="2.jpg" />
                        </Image.Source>
                    </Image>
                    <TextBlock
                        HorizontalAlignment="Center"
                        FontSize="50"
                        Foreground="DeepPink"
                        Text="DecodePixelHeight50" />
                </Grid>
                <Grid>
                    <Image>
                        <Image.Source>
                            <BitmapImage DecodePixelHeight="20" UriSource="2.jpg" />
                        </Image.Source>
                    </Image>
                    <TextBlock
                        HorizontalAlignment="Center"
                        FontSize="50"
                        Foreground="DeepPink"
                        Text="DecodePixelHeight20" />
                </Grid>
            </UniformGrid>
        </TabItem>

        <TabItem Header="DataGrid - 多级分组">
            <TabItem.Resources>
                <CollectionViewSource x:Key="cvs" Source="{h:GetStudents Count=10}">
                    <CollectionViewSource.GroupDescriptions>
                        <PropertyGroupDescription PropertyName="Name" />
                        <PropertyGroupDescription PropertyName="Class" />
                    </CollectionViewSource.GroupDescriptions>
                </CollectionViewSource>
            </TabItem.Resources>
            <DataGrid
                AutoGenerateColumns="False"
                IsReadOnly="True"
                ItemsSource="{Binding Source={StaticResource cvs}}">
                <DataGrid.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Margin" Value="0,0,0,5" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <Expander IsExpanded="True">
                                                <Expander.Header>
                                                    <DockPanel Margin="0,5">
                                                        <TextBlock
                                                            Width="200"
                                                            Margin="5,0,0,0"
                                                            FontWeight="Bold">
                                                            <Run Text="厨师 ：" />
                                                            <Run Text="{Binding Name, Mode=OneWay}" />
                                                        </TextBlock>

                                                        <TextBlock FontWeight="Bold">
                                                            <Run Text="数量 ：" />
                                                            <Run Text="{Binding ItemCount, Mode=OneWay}" />
                                                            <Run Text="个" />
                                                        </TextBlock>
                                                    </DockPanel>
                                                </Expander.Header>
                                                <ItemsPresenter />
                                            </Expander>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <DockPanel.Background>
                                        <SolidColorBrush Color="Transparent" />
                                    </DockPanel.Background>
                                    <TextBlock
                                        Width="200"
                                        Margin="30,6,0,6"
                                        VerticalAlignment="Center">
                                        <Run Text="班次 ：" />
                                        <Run Text="{Binding Name, Mode=OneWay}" />
                                    </TextBlock>
                                    <TextBlock VerticalAlignment="Center">
                                        <Run Text="销量 ：" />
                                        <Run Text="{Binding ItemCount, Mode=OneWay}" />
                                        <Run Text="单" />
                                    </TextBlock>
                                </DockPanel>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </DataGrid.GroupStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Width="Auto" Header="菜品">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image
                                    Width="200"
                                    Height="100"
                                    VerticalAlignment="Center"
                                    Source="2.jpg"
                                    Stretch="UniformToFill" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn
                        Width="*"
                        Binding="{Binding Address}"
                        Header="产地" />
                    <DataGridTextColumn
                        Width="*"
                        Binding="{Binding Emall}"
                        Header="邮箱" />
                    <DataGridTextColumn
                        Width="100"
                        Binding="{Binding Score, StringFormat={}{0:C}}"
                        Header="价格" />
                    <DataGridTextColumn
                        Width="*"
                        Binding="{Binding Tel}"
                        Header="联系方式" />
                </DataGrid.Columns>
            </DataGrid>
        </TabItem>

        <TabItem Header="DataGrid合并列头">
            <DataGrid AutoGenerateColumns="False" ItemsSource="{h:GetStudents Count=50}">
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn
                        Width="Auto"
                        Binding="{Binding Name}"
                        Header="姓名" />
                    <DataGridTextColumn
                        Width="Auto"
                        Binding="{Binding Emall}"
                        Header="邮箱" />
                    <DataGridTemplateColumn Width="Auto">
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Border
                                        Grid.ColumnSpan="2"
                                        BorderBrush="LightGray"
                                        BorderThickness="0,0,0,1">
                                        <TextBlock HorizontalAlignment="Center" Text="基本信息" />
                                    </Border>
                                    <Border
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        BorderBrush="LightGray"
                                        BorderThickness="0,0,1,0">
                                        <TextBlock HorizontalAlignment="Center" Text="班级" />
                                    </Border>
                                    <TextBlock
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        HorizontalAlignment="Center"
                                        Text="地址" />
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <UniformGrid Rows="1">
                                    <Border
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        BorderBrush="Black"
                                        BorderThickness="0,0,1,0">
                                        <TextBlock Text="{Binding Class}" />
                                    </Border>
                                    <TextBlock Text="{Binding Address}" />
                                </UniformGrid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding Age}" Header="年龄" />
                    <DataGridTemplateColumn Width="300">
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Border
                                        Grid.ColumnSpan="2"
                                        BorderBrush="LightGray"
                                        BorderThickness="0,0,0,1">
                                        <TextBlock HorizontalAlignment="Center" Text="调查问卷" />
                                    </Border>
                                    <Border
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        BorderBrush="LightGray"
                                        BorderThickness="0,0,1,0">
                                        <TextBlock HorizontalAlignment="Center" Text="评分" />
                                    </Border>
                                    <TextBlock
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        HorizontalAlignment="Center"
                                        Text="电话" />
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <UniformGrid Rows="1">
                                    <Border
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        BorderBrush="Black"
                                        BorderThickness="0,0,1,0">
                                        <TextBlock Text="{Binding Score}" />
                                    </Border>
                                    <TextBlock Text="{Binding Tel}" />
                                </UniformGrid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </TabItem>


        <TabItem Header="DataGridAutoColumnBehavior">
            <DataGrid ItemsSource="{h:GetStudents Count=50}">
                <b:Interaction.Behaviors>
                    <h:DataGridAutoColumnBehavior Type="{x:Type h:Student}" />
                </b:Interaction.Behaviors>
            </DataGrid>
        </TabItem>
        <TabItem Header="DislayDataGrid">
            <local:DislayDataGrid ItemsSource="{h:GetStudents Count=50}" />
        </TabItem>

        <TabItem Header="Grid - SharedSizeGroup">
            <ItemsControl Grid.IsSharedSizeScope="True" ItemsSource="{h:GetStudents Count=5}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid ShowGridLines="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="group1" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{Binding Address}" />
                            <TextBlock Grid.Column="1" Text="{Binding Name}" />
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </TabItem>
        <TabItem Header="GetAgeConverter">
            <TextBlock Text="{Binding Source={x:Static s:DateTime.MinValue}, Converter={local:GetAgeConverter}}" />
        </TabItem>
        <TabItem Header="ProcessCommand">
            <Button
                Command="{h:ProcessCommand}"
                CommandParameter="D:\"
                Content="打开D盘"
                Style="{DynamicResource {x:Static h:ButtonKeys.Default}}" />
        </TabItem>
    </TabControl>
</Window>
